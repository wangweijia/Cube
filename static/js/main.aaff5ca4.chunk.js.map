{"version":3,"sources":["cube.js","App.js","serviceWorker.js","index.js"],"names":["ItemWidth","Colors","Points","x","y","z","colorPoint","Cube","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onMouseDown","e","clientX","clientY","mouse","renderer","domElement","clientWidth","clientHeight","raycaster","setFromCamera","camera","intersects","intersectObjects","scene","children","length","item","cubeItem","onMouseDown","drx","angle1","dry","angle2","_onMouseMove","undefined","tempItem","p","dp","point","maxK","maxDD","index","aKey","v","Math","abs","j","k2","points","normalK","_this$cubeItem$point","newPoint","a","parseInt","a1","indexOf","splice","a2","axle","direction","normalKV","rotate","dx","dy","window","innerWidth","PI","innerHeight","_this$cameraPosition","cameraPosition","position","lookAt","clear","render","_onMouseUp","ccccccc","allObjects","renderCube","sin","cos","width","document","getElementById","height","THREE","antialias","setSize","appendChild","setClearColor","_this$cameraPosition2","autoUpdate","light","set","add","geometry","vertices","push","lineX","color","opacity","lineZ","rotation","lineY","_this2","geometry2","material2","vertexColors","cubeEdges","edgesMtl","oneItem","needPush","newItem","cubeLine","cube","matrix","faces","setHex","map","stratum","row","_this3","arguments","tempItems","element","b","r","na","nb","count","anime","from","to","interval","axis","rotWorldMatrix","i","endPoints","_newPoint","_newPoint2","_newPoint3","makeRotationAxis","normalize","multiply","setFromRotationMatrix","setTimeout","toFixed","initRaycaster","initScene","initCamera","initThree","initLight","initCoordinate","initObject","animation","_this4","react_default","createElement","id","style","onMouseMove","onMouseUp","onTouchStart","nativeEvent","touches","onTouchMove","onTouchEnd","Component","App","className","cube_Cube","Boolean","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aaff5ca4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three';\n\n// +x 0-1\n// -x 2-3\n// +y 4-5\n// -y 6-7\n// +z 8-9\n// -z 10-11\n\nconst ItemWidth = 100;\nconst CameraDistance = 1000;\n\nconst Colors = [\n    0x0000FF,\n    0x00FF00,\n    0xFF0000,\n    0xFFFF00,\n    0xFF00FF,\n    0x00FFFF,\n]\n\nconst Points = [\n    [\n        [\n            {x: -1, y: -1, z: -1, colorPoint: {x: -1, y: -1, z: -1}}, \n            {x: -1, y:  0, z: -1, colorPoint: {x: -1, y:  0, z: -1}}, \n            {x: -1, y:  1, z: -1, colorPoint: {x: -1, y:  1, z: -1}}\n        ],\n        [\n            {x:  0, y: -1, z: -1, colorPoint: {x:  0, y: -1, z: -1}}, \n            {x:  0, y:  0, z: -1, colorPoint: {x:  0, y:  0, z: -1}}, \n            {x:  0, y:  1, z: -1, colorPoint: {x:  0, y:  1, z: -1}}\n        ],\n        [\n            {x:  1, y: -1, z: -1, colorPoint: {x:  1, y: -1, z: -1}}, \n            {x:  1, y:  0, z: -1, colorPoint: {x:  1, y:  0, z: -1}}, \n            {x:  1, y:  1, z: -1, colorPoint: {x:  1, y:  1, z: -1}}\n        ],\n    ], \n    [\n        [\n            {x: -1, y: -1, z:  0, colorPoint: {x: -1, y: -1, z:  0}}, \n            {x: -1, y:  0, z:  0, colorPoint: {x: -1, y:  0, z:  0}}, \n            {x: -1, y:  1, z:  0, colorPoint: {x: -1, y:  1, z:  0}}\n        ],\n        [\n            {x:  0, y: -1, z:  0, colorPoint: {x:  0, y: -1, z:  0}}, \n            {x:  0, y:  0, z:  0, colorPoint: {x:  0, y:  0, z:  0}}, \n            {x:  0, y:  1, z:  0, colorPoint: {x:  0, y:  1, z:  0}}\n        ],\n        [\n            {x:  1, y: -1, z:  0, colorPoint: {x:  1, y: -1, z:  0}}, \n            {x:  1, y:  0, z:  0, colorPoint: {x:  1, y:  0, z:  0}}, \n            {x:  1, y:  1, z:  0, colorPoint: {x:  1, y:  1, z:  0}}\n        ],\n    ], \n    [\n        [\n            {x: -1, y: -1, z:  1, colorPoint: {x: -1, y: -1, z:  1}}, \n            {x: -1, y:  0, z:  1, colorPoint: {x: -1, y:  0, z:  1}}, \n            {x: -1, y:  1, z:  1, colorPoint: {x: -1, y:  1, z:  1}}\n        ],\n        [\n            {x:  0, y: -1, z:  1, colorPoint: {x:  0, y: -1, z:  1}}, \n            {x:  0, y:  0, z:  1, colorPoint: {x:  0, y:  0, z:  1}}, \n            {x:  0, y:  1, z:  1, colorPoint: {x:  0, y:  1, z:  1}}\n        ],\n        [\n            {x:  1, y: -1, z:  1, colorPoint: {x:  1, y: -1, z:  1}}, \n            {x:  1, y:  0, z:  1, colorPoint: {x:  1, y:  0, z:  1}}, \n            {x:  1, y:  1, z:  1, colorPoint: {x:  1, y:  1, z:  1}}\n        ],\n    ], \n]\n\nexport default class Cube extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onMouseDown = false;\n\n        // 方位角\n        this.angle1 = Math.PI / 2;\n        // 仰角\n        this.angle2 = 0;\n\n        this.allObjects = [];\n    }\n\n    componentDidMount() {\n        this.renderCube();\n    }\n\n    cameraPosition(angle1, angle2) {\n        // console.log(angle1, angle2);\n\n        // 方位角\n        // angle1\n        // 仰角\n        // angle2\n        let x = CameraDistance * Math.sin(angle1) * Math.cos(angle2);\n        let y = CameraDistance * Math.sin(angle1) * Math.sin(angle2);\n        let z = CameraDistance * Math.cos(angle1);\n\n        // console.log(x, y, z);\n\n        return {\n            x, y, z\n        }\n    }\n\n    initThree() {\n        let width = document.getElementById('canvas-frame').clientWidth;\n        let height = document.getElementById('canvas-frame').clientHeight;\n\n        let renderer = new THREE.WebGLRenderer({\n            antialias : true\n        });\n        renderer.setSize(width, height);\n        document.getElementById('canvas-frame').appendChild(renderer.domElement);\n        renderer.setClearColor(0xFFFFFF, 1.0);\n        return renderer;\n    }\n\n    initRaycaster() {\n        this.raycaster = new THREE.Raycaster();//光线投射，用于确定鼠标点击位置\n        this.mouse = new THREE.Vector2();\n    }\n\n    initCamera() {\n        let width = document.getElementById('canvas-frame').clientWidth;\n        let height = document.getElementById('canvas-frame').clientHeight;\n\n        let {x, y, z} = this.cameraPosition(this.angle1, this.angle2);\n\n        let camera = new THREE.PerspectiveCamera(75, width / height, 1, 10000);\n        camera.position.x = x;\n        camera.position.y = y;\n        camera.position.z = z;\n        // camera.up.x = 0;\n        // camera.up.y = 0;\n        // camera.up.z = 0;\n        camera.lookAt(0, 0, 0);\n\n        return camera;\n    }\n\n    initScene() {\n        let scene = new THREE.Scene();\n        scene.autoUpdate = true;\n        return scene;\n    }\n\n    initLight(scene) {\n        let light = new THREE.DirectionalLight(0xFF0000, 1.0, 0);\n        light.position.set(100, 100, 200);\n        scene.add(light);\n    }\n\n    initCoordinate(scene) {\n        let geometry = new THREE.Geometry();\n        geometry.vertices.push( new THREE.Vector3( - 500, 0, 0 ) );\n        geometry.vertices.push( new THREE.Vector3( 500, 0, 0 ) );\n\n        // #ff0000\n        let lineX = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0xff0000, opacity: 1 } ) );\n        scene.add(lineX);\n        // #00ff00\n        let lineZ = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x00ff00, opacity: 1 } ) );\n        lineZ.rotation.y = 90 * Math.PI / 180;\n        scene.add(lineZ);\n        // #0000ff\n        let lineY = new THREE.Line( geometry, new THREE.LineBasicMaterial( { color: 0x0000ff, opacity: 1 } ) );\n        lineY.rotation.z = 90 * Math.PI / 180;\n        scene.add(lineY);\n    }\n\n    initObject(scene) {\n        let geometry2 = new THREE.CubeGeometry(ItemWidth, ItemWidth, ItemWidth); \n        let material2 = new THREE.MeshBasicMaterial({\n            vertexColors: true,\n        });\n\n        let cubeEdges = new THREE.EdgesGeometry(geometry2, 1);\n        let edgesMtl =  new THREE.LineBasicMaterial({color: 0x000000});\n\n        const oneItem = (item, needPush) => {\n            let {x, y, z, colorPoint} = item;\n            let newItem = {x, y, z, colorPoint};\n            // edgesMtl.depthTest = false; 深度测试，若开启则是边框透明的效果\n            let cubeLine = new THREE.LineSegments(cubeEdges, edgesMtl);\n    \n            let cube = new THREE.Mesh(geometry2, material2);\n            cube.matrix = new THREE.Matrix4();\n            // cube.matrixAutoUpdate = true;\n    \n            cube.add(cubeLine);\n    \n            cube.position.x = colorPoint.x * ItemWidth;\n            cube.position.y = colorPoint.y * ItemWidth;\n            cube.position.z = colorPoint.z * ItemWidth;\n    \n            for (let index = 0; index < 12; index+=2) {\n                let color = Colors[index/2];\n                cube.geometry.faces[index].color.setHex(color);\n                cube.geometry.faces[index+1].color.setHex(color);\n            }\n    \n            newItem.cube = cube;\n            if (needPush) {\n                this.allObjects.push(newItem);\n            }\n    \n            scene.add(cube);\n        }\n\n        if (this.allObjects === undefined || this.allObjects.length === 0) {\n            this.allObjects = [];\n\n            Points.map((stratum)=>{\n                stratum.map((row)=>{\n                    row.map((item)=>{\n                        oneItem(item, true);\n                    })\n                })\n            })\n        } else {\n            this.allObjects.map((item)=>{\n                oneItem(item, false);\n            })\n        }\n    }\n\n    animation(scene, camera, renderer) {\n        camera.position.x =camera.position.x +1;\n        renderer.render(scene, camera);\n    }\n\n    rotate(point, axle, direction=0) {\n        // axle：需要考虑的2个坐标轴\n        // direction 0:顺时针， 1:逆时针\n\n        let tempItems = [];\n\n        for (let index = 0; index < this.allObjects.length; index++) {\n            let element = this.allObjects[index];\n            if (element[axle] === point[axle]) {\n                tempItems.push(element);\n\n                if (tempItems.length >= 9) {\n                        break;\n                }\n            }\n        }\n\n        const newPoint = (a, b, r)=>{\n            let na = a*Math.cos(r)*ItemWidth - b*Math.sin(r)*ItemWidth;\n            let nb = a*Math.sin(r)*ItemWidth + b*Math.cos(r)*ItemWidth;\n\n            return {na, nb};\n        }\n\n        let count = 1;\n        const anime = (from, to, interval)=>{\n\n            let axis = undefined;\n            let rotWorldMatrix = undefined;\n\n            let i = (to - from) / interval;\n\n            let v = count * i + from;\n            let endPoints = [];\n            tempItems.map((item)=>{\n                if (axle === 'x') {\n                    axis = new THREE.Vector3(1,0,0); \n                    let {na, nb} = newPoint(item.y, item.z, v);\n                    item.cube.position.y = na;\n                    item.cube.position.z = nb;\n                    endPoints.push({x: item.x, y: na/ItemWidth, z: nb/ItemWidth });\n                } else if (axle === 'y') {\n                    axis = new THREE.Vector3(0,1,0); \n                    let {na, nb} = newPoint(item.z, item.x, v);\n                    item.cube.position.x = nb;\n                    item.cube.position.z = na;\n                    endPoints.push({x: nb/ItemWidth, y: item.y, z: na/ItemWidth });\n                } else if (axle === 'z') {\n                    axis = new THREE.Vector3(0,0,1); \n                    let {na, nb} = newPoint(item.x, item.y, v);\n                    item.cube.position.x = na;\n                    item.cube.position.y = nb;\n                    endPoints.push({x: na/ItemWidth, y: nb/ItemWidth, z: item.z });\n                }\n\n                rotWorldMatrix = new THREE.Matrix4();\n                rotWorldMatrix.makeRotationAxis(axis.normalize(), i);\n                rotWorldMatrix.multiply(item.cube.matrix);\n                item.cube.matrix = rotWorldMatrix;\n\n                // item.rotWorldMatrix = rotWorldMatrix;\n                item.cube.rotation.setFromRotationMatrix(item.cube.matrix);\n            })\n    \n            count ++;\n            if (count <= interval) {\n                this.renderer.render(this.scene, this.camera);\n                setTimeout(() => {\n                    anime(from, to, interval);\n                }, 100);\n            } else {\n                tempItems.map((item, index)=>{\n                    item.x = parseInt(endPoints[index].x.toFixed(1));\n                    item.y = parseInt(endPoints[index].y.toFixed(1));\n                    item.z = parseInt(endPoints[index].z.toFixed(1));\n                });\n                // this.renderer.clear();\n                this.renderer.render(this.scene, this.camera);\n\n            }\n        }\n\n        let pi = direction === 0 ? Math.PI : - Math.PI;\n\n        anime(0, pi/2, 3);\n\n    }\n\n    renderCube() {\n        this.initRaycaster();\n        \n        this.scene = this.initScene();\n\n        this.camera = this.initCamera();\n\n        this.renderer = this.initThree();\n\n        this.initLight(this.scene);\n        this.initCoordinate(this.scene);\n        this.initObject(this.scene);\n\n\n        this.animation(this.scene, this.camera, this.renderer);\n    }\n\n    _onMouseDown = (e)=>{\n        let {clientX, clientY} = e; \n        this.clientX = clientX;\n        this.clientY = clientY;\n\n        //将html坐标系转化为webgl坐标系，并确定鼠标点击位置\n        this.mouse.x =  clientX / this.renderer.domElement.clientWidth*2-1;\n        this.mouse.y =  -(clientY / this.renderer.domElement.clientHeight*2)+1;\n        //以camera为z坐标，确定所点击物体的3D空间位置\n        this.raycaster.setFromCamera(this.mouse, this.camera);\n        //确定所点击位置上的物体数量\n        let intersects = this.raycaster.intersectObjects(this.scene.children);\n\n        if (intersects.length > 0) {\n            let item = intersects[0];\n            this.cubeItem = item;\n        } else {\n            this.onMouseDown = true;\n\n            this.drx = this.angle1;\n            this.dry = this.angle2;\n        }\n    }\n\n    _onMouseMove = (e)=>{\n        let {clientX, clientY} = e; \n\n        if (this.cubeItem !== undefined) {\n            //将html坐标系转化为webgl坐标系，并确定鼠标点击位置\n            this.mouse.x =  e.clientX / this.renderer.domElement.clientWidth*2-1;\n            this.mouse.y =  -(e.clientY / this.renderer.domElement.clientHeight*2)+1;\n            //以camera为z坐标，确定所点击物体的3D空间位置\n            this.raycaster.setFromCamera(this.mouse, this.camera);\n            //确定所点击位置上的物体数量\n            let intersects = this.raycaster.intersectObjects(this.scene.children);\n            \n            if (intersects.length > 0) {\n                let tempItem = intersects[0];\n\n                let p = ['x', 'y', 'z'];\n\n                let dx = tempItem.point.x - this.cubeItem.point.x;\n                let dy = tempItem.point.y - this.cubeItem.point.y;\n                let dz = tempItem.point.z - this.cubeItem.point.z;\n\n                let dp = {\n                    'x': dx,\n                    'y': dy,\n                    'z': dz\n                }\n\n                let maxK = undefined;\n                let maxDD = 0;\n                for (let index = 0; index < p.length; index++) {\n                    const aKey = p[index];\n                    let v = Math.abs(dp[aKey]);\n                    maxK = aKey;\n                    maxDD = dp[aKey];\n                    for (let j = index+1; index < p.length; index++) {\n                        const k2 = p[j];\n                        let v2 = Math.abs(dp[k2]);\n                        if (v2 > v) {\n                            maxK = undefined;\n                            maxDD = 0;  \n                            break;\n                        }\n                    }\n                    if (maxK === aKey) {\n                       break; \n                    }\n                }\n\n                if (Math.abs(maxDD) > ItemWidth/2) {\n                    let points = this.cubeItem.point;\n                    let normalK = undefined;\n                    for (let index = 0; index < p.length; index++) {\n                        const aKey = p[index];\n                        let v = points[aKey];\n                        if (Math.abs(v) >= (1.5*ItemWidth-0.1)) {\n                            normalK = aKey;\n                            break;\n                        }\n                    }\n\n                    let {x, y, z} = this.cubeItem.point;\n\n                    const newPoint = (p) => {\n                        let a = parseInt((Math.abs(p) + ItemWidth/2 - 1) / ItemWidth);\n                        if (p >= 0) {\n                            return a\n                        } else {\n                            return -a;\n                        }\n                    }\n                    let itemx = newPoint(x);\n                    let itemy = newPoint(y);\n                    let itemz = newPoint(z);\n\n                    let point = {x: itemx, y: itemy, z: itemz};\n\n                    let a1 =  p.indexOf(normalK);\n                    if (a1 > -1) {\n                        p.splice(a1, 1);\n                    }\n                    let a2 =  p.indexOf(maxK);\n                    if (a2 > -1) {\n                        p.splice(a2, 1);\n                    }\n                    let axle = p[0];\n\n                    this.cubeItem = undefined;\n\n                    let direction = 0;\n\n                    if (axle === 'x') {\n                        let normalKV = point[normalK];\n                        if ( (normalK === 'y' && normalKV < 0) || (normalK === 'z' && normalKV > 0) ) {\n                            direction = maxDD > 0 ? 1 : 0;\n                        } else {\n                            direction = maxDD > 0 ? 0 : 1;\n                        }\n                    } else if (axle === 'y') {\n                        let normalKV = point[normalK];\n                        if ( (normalK === 'z' && normalKV < 0) || (normalK === 'x' && normalKV > 0) ) {\n                            direction = maxDD > 0 ? 1 : 0;\n                        } else {\n                            direction = maxDD > 0 ? 0 : 1;\n                        }\n                    } else if (axle === 'z') {\n                        let normalKV = point[normalK];\n                        if ( (normalK === 'x' && normalKV < 0) || (normalK === 'y' && normalKV > 0) ) {\n                            direction = maxDD > 0 ? 1 : 0;\n                        } else {\n                            direction = maxDD > 0 ? 0 : 1;\n                        }\n                    }\n\n                    this.rotate(point, axle, direction);\n                }\n            }\n        } else if (this.onMouseDown) {\n            if (this.clientX !== undefined && this.clientY !== undefined) {\n                // 向左为正，向右为负\n                let dx = this.clientX - clientX;\n                // 向上为正，向下为负\n                let dy = this.clientY - clientY;\n\n                // console.log('hfghjkfghjkfghjkfghjkfghjk');\n                // console.log(`${this.angle1} + ${dx} / window.innerWidth * 2 * Math.PI = ${this.angle1 + dx / window.innerWidth * 2 * Math.PI}`);\n                // console.log(`${this.angle2} + ${dy} / window.innerWidth * 2 * Math.PI = ${this.angle2 + dy / window.innerWidth * 2 * Math.PI}`);\n\n                this.drx = (this.angle1 + dx / window.innerWidth * 2 * Math.PI);\n                this.dry = (this.angle2 + dy / window.innerHeight * 2 * Math.PI);\n\n                let {x, y, z} = this.cameraPosition(this.drx, this.dry);\n\n                this.camera.position.x = x;\n                this.camera.position.y = y;\n                this.camera.position.z = z;\n\n                this.camera.lookAt(0, 0, 0);\n\n                this.renderer.clear();\n                this.renderer.render(this.scene, this.camera);\n            }\n        }\n    }\n\n    _onMouseUp = (e)=>{\n        this.cubeItem = undefined;\n        this.onMouseDown = false;\n        this.clientX = undefined;\n        this.clientY = undefined;\n\n        this.ccccccc = true;\n\n\n        if (this.drx !== undefined) {\n            this.angle1 = this.drx;\n        }\n        if (this.dry !== undefined) {\n            this.angle2 = this.dry;\n        }\n    }\n\n    render() {\n        return (\n            <div id='canvas-frame' style={{\n                width: window.innerWidth,\n                height: window.innerHeight,\n            }} \n            onMouseDown={(e)=>{\n                this._onMouseDown(e);\n            }} \n            onMouseMove={(e)=>{\n                this._onMouseMove(e);\n            }} \n            onMouseUp={(e)=>{\n                this._onMouseUp(e);\n            }} \n\n            onTouchStart={(e)=>{\n                this._onMouseDown(e.nativeEvent.touches[0]);\n            }}\n            onTouchMove={(e)=>{\n                this._onMouseMove(e.nativeEvent.touches[0]);\n            }}\n            onTouchEnd={(e)=>{\n                this._onMouseUp(e.nativeEvent.touches[0]);\n            }}\n            >\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport Cube from './cube';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Cube/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}